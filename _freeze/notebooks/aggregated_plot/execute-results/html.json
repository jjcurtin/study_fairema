{
  "hash": "2dff2624193f7ccc4c112987b59e39cb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Agregated metrics plot\"\nauthor: \"Coco Yu\"\neditor_options: \n  chunk_output_type: console\nparams:\n  study: \"ema\"\n  window: \"1day\"\n  lead: 0\n  version: \"v5\"\n  cv: \"nested\"\n  model: \"main\" # \"main\" or \"baseline\"\n---\n\n\n### Set Up Environment\n\nSet up parameters as variables\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(study <- params$study)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ema\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(window <- params$window)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1day\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(lead <- params$lead)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(version <- params$version)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"v5\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(cv <- params$cv)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"nested\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(model <- params$model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"main\"\n```\n\n\n:::\n:::\n\n\nFunction conflicts\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# source\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ntidymodels_conflictRules()\n```\n:::\n\n\nChunk Defaults\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\nPackages for script\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\n```\n:::\n\n\nSource support functions\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\nAbsolute paths\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_fairema <- format_path(str_c(\"studydata/risk/data_processed/fairema\"))\n```\n:::\n\n\n### Read in data\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_sex <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"sex\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                      col_types = cols())\ndf_sex$attribute <- \"sex\"\n\ndf_race <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"race\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                    col_types = cols())\ndf_race$attribute <- \"race\"\n\ndf_income <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"income\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                      col_types = cols())\ndf_income$attribute <- \"income\"\n\ndf_age <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"age\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                   col_types = cols())\ndf_age$attribute <- \"age\"\n\ndf <- rbind(df_sex, df_race, df_income, df_age)\n```\n:::\n\n\n### Make Dataframes for plots\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmak_df_plot <- function(df){\n  df |> \n    filter(group != \"all\", n_lapses != 0) |> \n    select(-n_lapses) |> \n    pivot_longer(-c(\"outer_split_num\", \"group\", \"attribute\"),\n               names_to = \"metrics\", values_to = \"score\") |>\n    mutate(metrics = case_when(metrics == \"balaccuracy\" ~ \"balanced accuracy\",\n                               metrics != \"balaccuracy\" ~ metrics),\n           group = case_when(\n             group == \"Male\" ~ \"Privileged (Male)\",\n             group == \"Female\" ~ \"Unprivileged (Female)\",\n             group == \"white\" ~ \"Privileged (White)\",\n             group == \"non_white\" ~ \"Unprivileged (Person of Color)\",\n             group == \"above_poverty\" ~ \"Privileged (Above Poverty)\",\n             group == \"below_poverty\" ~ \"Unprivileged (Below Poverty)\",\n             group == \"younger\" ~ \"Privileged (Age 55 or older)\",\n             group == \"older\" ~ \"Unprivileged (Below 55)\"\n           ),\n           sig = case_when(\n             attribute == \"sex\" & metrics == \"auroc\" ~ \"**\",\n             attribute == \"sex\" & metrics == \"prauc\" ~ \"\",\n             attribute == \"sex\" & metrics == \"sensitivity\" ~ \"\",\n             attribute == \"sex\" & metrics == \"specificity\" ~ \"*\",\n             attribute == \"sex\" & metrics == \"ppv\" ~ \"\",\n             attribute == \"sex\" & metrics == \"balanced accuracy\" ~ \"\",\n             attribute == \"race\" & metrics == \"auroc\" ~ \"***\",\n             attribute == \"race\" & metrics == \"prauc\" ~ \"***\",\n             attribute == \"race\" & metrics == \"sensitivity\" ~ \"***\",\n             attribute == \"race\" & metrics == \"specificity\" ~ \"*\",\n             attribute == \"race\" & metrics == \"ppv\" ~ \"*\",\n             attribute == \"race\" & metrics == \"balanced accuracy\" ~ \"***\",\n             attribute == \"income\" & metrics == \"auroc\" ~ \"**\",\n             attribute == \"income\" & metrics == \"prauc\" ~ \"*\",\n             attribute == \"income\" & metrics == \"sensitivity\" ~ \"***\",\n             attribute == \"income\" & metrics == \"specificity\" ~ \"\",\n             attribute == \"income\" & metrics == \"ppv\" ~ \"\",\n             attribute == \"income\" & metrics == \"balanced accuracy\" ~ \"***\",\n             attribute == \"age\" & metrics == \"auroc\" ~ \"***\",\n             attribute == \"age\" & metrics == \"prauc\" ~ \"\",\n             attribute == \"age\" & metrics == \"sensitivity\" ~ \"**\",\n             attribute == \"age\" & metrics == \"specificity\" ~ \"*\",\n             attribute == \"age\" & metrics == \"ppv\" ~ \"*\",\n             attribute == \"age\" & metrics == \"balanced accuracy\" ~ \"***\"\n           ),\n           CI = case_when(\n             attribute == \"sex\" & metrics == \"auroc\" ~ \"CI[0.014, 0.074]\",\n             attribute == \"sex\" & metrics == \"prauc\" ~ \"CI[-0.080, 0.106]\",\n             attribute == \"sex\" & metrics == \"sensitivity\" ~ \"CI[-0.065, 0.106]\",\n             attribute == \"sex\" & metrics == \"specificity\" ~ \"CI[0.011, 0.101]\",\n             attribute == \"sex\" & metrics == \"ppv\" ~ \"CI[-0.071, 0.057]\",\n             attribute == \"sex\" & metrics == \"balanced accuracy\" ~ \"CI[-0.001, 0.078]\",\n             attribute == \"race\" & metrics == \"auroc\" ~ \"CI[0.127, 0.259]\",\n             attribute == \"race\" & metrics == \"prauc\" ~ \"CI[0.121, 0.324]\",\n             attribute == \"race\" & metrics == \"sensitivity\" ~ \"CI[0.132, 0.363]\",\n             attribute == \"race\" & metrics == \"specificity\" ~ \"CI[0.0103, 0.152]\",\n             attribute == \"race\" & metrics == \"ppv\" ~ \"CI[0.026, 0.182]\",\n             attribute == \"race\" & metrics == \"balanced accuracy\" ~ \"CI[0.121, 0.206]\",\n             attribute == \"income\" & metrics == \"auroc\" ~ \"CI[0.067, 0.196]\",\n             attribute == \"income\" & metrics == \"prauc\" ~ \"CI[0.016, 0.227]\",\n             attribute == \"income\" & metrics == \"sensitivity\" ~ \"CI[0.140, 0.344]\",\n             attribute == \"income\" & metrics == \"specificity\" ~ \"CI[-0.103, -0.008]\",\n             attribute == \"income\" & metrics == \"ppv\" ~ \"CI[-0.079, 0.089]\",\n             attribute == \"income\" & metrics == \"balanced accuracy\" ~ \"CI[0.047, 0.139]\",\n             attribute == \"age\" & metrics == \"auroc\" ~ \"CI[0.057, 0.138]\",\n             attribute == \"age\" & metrics == \"prauc\" ~ \"CI[-0.017, 0.187]\",\n             attribute == \"age\" & metrics == \"sensitivity\" ~ \"CI[0.063, 0.240]\",\n             attribute == \"age\" & metrics == \"specificity\" ~ \"CI[0.006, 0.106]\",\n             attribute == \"age\" & metrics == \"ppv\" ~ \"CI[0.011, 0.143]\",\n             attribute == \"age\" & metrics == \"balanced accuracy\" ~ \"CI[0.065, 0.149]\"\n           )\n           )|> \n    mutate(metrics = if_else(metrics == \"prauc\", \"auPR\", metrics)) |> \n    mutate(metrics = if_else(metrics == \"auroc\", \"auROC\", metrics))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_sex <- mak_df_plot(df_sex)\ndf_race <- mak_df_plot(df_race)\ndf_income <- mak_df_plot(df_income)\ndf_age <- mak_df_plot(df_age)\ndf <- mak_df_plot(df)\n```\n:::\n\n\n### Construct Plots\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\noutput_plot <- function(df){\n  sig_marks <- c(\"\", \"*\", \"**\", \"***\", \"\")\n  ggarrange(\n    df |> \n      filter(metrics %in% c(\"auROC\", \"auPR\")) |> \n      ggplot(aes(x = \"\", y = score, fill = group)) +\n      geom_boxplot(outlier.size = .2) +\n      facet_wrap(~factor(metrics, levels = c(\"auROC\", \"auPR\"))) +\n      theme_classic() +\n      theme(axis.title.y = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.line.y = element_blank(),\n            axis.text.y = element_text(margin = margin(r = -12)),\n            axis.line.x = element_blank(),\n            axis.ticks.x = element_blank(),\n            plot.margin = margin(1, 1, 1, 1, \"pt\"),\n            legend.title=element_blank()) +\n      scale_fill_manual(values = c(\"#6CAA2F\", \"#C23E28\")) +\n      labs(x = NULL) +\n      guides(fill=guide_legend(nrow=2, byrow=TRUE)) +\n      geom_text(aes(label = sig, y = 0), color = \"blue\", size = 7),\n    df |> \n      filter(metrics %in% c(\"sensitivity\", \"specificity\", \"ppv\")) |> \n      ggplot(aes(x = \"\", y = score, fill = group)) +\n      geom_boxplot(outlier.size = .2) +\n      facet_wrap(~factor(metrics, \n                         levels = c(\"specificity\", \"sensitivity\", \"ppv\"))) +\n      theme_classic() +\n      theme(axis.title.y = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.line.y = element_blank(),\n            axis.text.y = element_text(margin = margin(r = -12)),\n            axis.line.x = element_blank(),\n            axis.ticks.x = element_blank(),\n            plot.margin = margin(1, 1, 1, 1, \"pt\"),\n            legend.title=element_blank()) + \n      scale_fill_manual(values = c(\"#6CAA2F\", \"#C23E28\")) +\n      labs(x = NULL) +\n      guides(fill=guide_legend(nrow=2, byrow=TRUE)) +\n      geom_text(aes(label = sig, y = 0), color = \"blue\", size = 7),\n    nrow = 2,\n    common.legend = TRUE,\n    legend = \"bottom\",\n    widths = c(2, 3)\n  ) +\n    theme(plot.margin = margin(1, 1, 1, 1, \"pt\"))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\n#| fig-width: 7.3\n#| fig-height: 5.4\n\nggarrange(\n  annotate_figure(output_plot(df_race), top = text_grob(\"Race\", face = \"bold\")),\n  annotate_figure(output_plot(df_sex), top = text_grob(\"Sex\", face = \"bold\"))\n)\n```\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-1.png){width=700.8}\n:::\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\n#| fig-width: 7.3\n#| fig-height: 5.4\n\nggarrange(\n  annotate_figure(output_plot(df_income), top = text_grob(\"Income\", face = \"bold\")),\n  annotate_figure(output_plot(df_age), top = text_grob(\"Age\", face = \"bold\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-2.png){width=700.8}\n:::\n:::\n",
    "supporting": [
      "aggregated_plot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}