{
  "hash": "dc0f97e185b70680f17f2ab0738638fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Agregated metrics plot\"\nauthor: \"Coco Yu\"\neditor_options: \n  chunk_output_type: console\nparams:\n  study: \"ema\"\n  window: \"1day\"\n  lead: 0\n  version: \"v5\"\n  cv: \"nested\"\n  model: \"main\" # \"main\" or \"baseline\"\n---\n\n\n### Set Up Environment\n\nSet up parameters as variables\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(study <- params$study)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ema\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(window <- params$window)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1day\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(lead <- params$lead)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(version <- params$version)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"v5\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(cv <- params$cv)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"nested\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(model <- params$model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"main\"\n```\n\n\n:::\n:::\n\n\nFunction conflicts\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# source\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ntidymodels_conflictRules()\n```\n:::\n\n\nChunk Defaults\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\nPackages for script\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\n```\n:::\n\n\nSource support functions\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\nAbsolute paths\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_fairema <- format_path(str_c(\"studydata/risk/data_processed/fairema\"))\n```\n:::\n\n\n### Read in data\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_sex <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"sex\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                      col_types = cols())\ndf_sex$attribute <- \"sex\"\n\ndf_race <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"race\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                    col_types = cols())\ndf_race$attribute <- \"race\"\n\ndf_income <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"income\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                      col_types = cols())\ndf_income$attribute <- \"income\"\n\ndf_age <- read_csv(here::here(path_fairema, str_c(\"outer_preds_perf_\", \"age\", \"_\", window, \n                                           \"_\", lead, \"_\", version, \"_\", cv, \"_\", model,\n                                           \".csv\")),\n                   col_types = cols())\ndf_age$attribute <- \"age\"\n\ndf <- rbind(df_sex, df_race, df_income, df_age)\n```\n:::\n\n\n### Make Dataframes for plots\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmak_df_plot <- function(df){\n  df |> \n    filter(group != \"all\", n_lapses != 0) |> \n    select(-n_lapses) |> \n    pivot_longer(-c(\"outer_split_num\", \"group\", \"attribute\"),\n               names_to = \"metrics\", values_to = \"score\") |>\n    mutate(metrics = case_when(metrics == \"balaccuracy\" ~ \"balanced accuracy\",\n                               metrics != \"balaccuracy\" ~ metrics),\n           group = if_else(\n             group %in% c(\"Female\", \"non_white\", \"below_poverty\", \"older\"),\n             \"Unprivileged\",\n             \"Privileged\"\n           )) |> \n    mutate(metrics = if_else(metrics == \"prauc\", \"auPRC\", metrics))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_sex <- mak_df_plot(df_sex)\ndf_race <- mak_df_plot(df_race)\ndf_income <- mak_df_plot(df_income)\ndf_age <- mak_df_plot(df_age)\ndf <- mak_df_plot(df)\n```\n:::\n\n\n### Construct Plots\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf |> \n  ggplot(aes(x = metrics, y = score, fill = group)) +\n  geom_boxplot(outlier.size = .8) +\n  facet_wrap(~attribute) +\n  scale_fill_manual(values = c(\"Privileged\" = \"#6CAA2F\",\n                               \"Unprivileged\" = \"#C23E28\")) +\n  theme_classic() + \n  theme(axis.text.x=element_text(angle = 35, vjust = 0.7))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\noutput_plot <- function(df){\n  ggarrange(\n    df |> \n      filter(metrics %in% c(\"auroc\", \"auPRC\")) |> \n      ggplot(aes(x = \"\", y = score, fill = group)) +\n      geom_boxplot(outlier.size = .8) +\n      facet_wrap(~metrics) +\n      theme_classic() +\n      theme(axis.title.y = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.line.y = element_blank(),\n            axis.text.y = element_text(margin = margin(r = -12)),\n            axis.line.x = element_blank(),\n            axis.ticks.x = element_blank(),\n            plot.margin = margin(10, 50, 10, 50, \"pt\")) +\n      scale_fill_manual(values = c(\"Privileged\" = \"#6CAA2F\",\n                                   \"Unprivileged\" = \"#C23E28\")) +\n      labs(x = NULL),\n    df |> \n      filter(metrics %in% c(\"sensitivity\", \"specificity\", \"ppv\")) |> \n      ggplot(aes(x = \"\", y = score, fill = group)) +\n      geom_boxplot(outlier.size = .8) +\n      facet_wrap(~metrics) +\n      theme_classic() +\n      theme(axis.title.y = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.line.y = element_blank(),\n            axis.text.y = element_text(margin = margin(r = -12)),\n            axis.line.x = element_blank(),\n            axis.ticks.x = element_blank(),\n            plot.margin = margin(10, 50, 10, 50, \"pt\")) +\n      scale_fill_manual(values = c(\"Privileged\" = \"#6CAA2F\",\n                                   \"Unprivileged\" = \"#C23E28\")) +\n      labs(x = NULL),\n    nrow = 2,\n    common.legend = TRUE,\n    legend = \"bottom\",\n    widths = c(2, 3)\n  )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\noutput_plot(df_sex) |> \n  annotate_figure(top = text_grob(\"Sex\", face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\noutput_plot(df_race) |> \n  annotate_figure(top = text_grob(\"Race\", face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\noutput_plot(df_income) |> \n  annotate_figure(top = text_grob(\"Income\", face = \"bold\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-3.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#| label: bar_plot\noutput_plot(df_age) |> \n  annotate_figure(top = text_grob(\"Age\", face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/bar_plot-4.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggarrange(\n  annotate_figure(output_plot(df_sex), top = text_grob(\"Sex\", face = \"bold\")),\n  annotate_figure(output_plot(df_race), top = text_grob(\"Race\", face = \"bold\")),\n  annotate_figure(output_plot(df_income), top = text_grob(\"Income\", face = \"bold\")),\n  annotate_figure(output_plot(df_age), top = text_grob(\"Age\", face = \"bold\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](aggregated_plot_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "aggregated_plot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}