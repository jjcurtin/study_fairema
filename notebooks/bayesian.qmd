---
title: "Bayesian Analysis"
author: "Coco Yu"
editor_options:
  chunk_output_type: console
params:
  study: "ema"
  window: "1day"
  lead: 0
  version: "v5"
  cv: "nested"
  model: "main" # "main" or "baseline"
---

### Set Up Environment

Set up parameters as variables
```{r}
(study <- params$study)
(window <- params$window)
(lead <- params$lead)
(version <- params$version)
(cv <- params$cv)
(model <- params$model)
```

Function conflicts
```{r, packages_workflow}
#| message: false
#| warning: false
#| include: false
#| echo: false

# source
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true")

# handle conflicts
options(conflicts.policy = "depends.ok")
tidymodels_conflictRules()
```

Chunk Defaults
```{r defaults}
#| include: false

knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')

options(tibble.width = Inf)
options(tibble.print_max = Inf)
```

Packages for script
```{r, packages_script}
#| message: false
#| warning: false
#| include: false
#| echo: false

library(tidyverse)
library(tidymodels)
library(tidyposterior)
```

Source support functions
```{r source_functions}
#| message: false
#| warning: false
#| include: false
#| echo: false

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
```

Absolute paths
```{r path}
path_fairema <- format_path(str_c("studydata/risk/data_processed/fairema"))
```

### Bayesian Analysis

```{r function}
contrast_table <- function(df, met, levels){
  df |> 
    filter(group != "all") |>
    select(c(met, "group", "outer_split_num")) |> 
    group_by(group) |>
    mutate(repeat_num = trunc((outer_split_num - 1) / 10 + 1),
           fold_num = outer_split_num %% 10) |> 
    select(c(met, "group", "repeat_num", "fold_num")) |>
    pivot_wider(values_from = c(met), names_from = group) |>
    rename(id = repeat_num, id2 = fold_num) |>
    perf_mod(formula = statistic ~ model + (1 | id2/id),
             # prior_intercept = rstanarm::student_t(autoscale = TRUE),
             # prior = rstanarm::student_t(autoscale = TRUE),
             # transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
             # iter = 2000, chains = 4,
             adapt_delta = .99,
             # cores = 4, seed = 12345,
             family = gaussian, verbose = FALSE) |> 
    contrast_models(list_1 = levels[1], list_2 = levels[2]) |> 
    summary(size = 0) |> 
    mutate(metrics = met, .before = contrast)
  }
```


```{r sex}
df_sex <- read_csv(here::here(path_fairema, str_c("outer_preds_perf_", "sex", 
                                                  "_", window, "_", lead, "_", 
                                                  version, "_", cv, "_", model,
                                                  ".csv")),
                      col_types = cols()) |> 
  filter(group != "all", n_lapses != 0) |> 
  select(-n_lapses)

rbind(
  contrast_table(df_sex, "auroc", c("Male", "Female")),
  contrast_table(df_sex, "prauc", c("Male", "Female")),
  contrast_table(df_sex, "sensitivity", c("Male", "Female")),
  contrast_table(df_sex, "specificity", c("Male", "Female")),
  contrast_table(df_sex, "ppv", c("Male", "Female")),
  contrast_table(df_sex, "balaccuracy", c("Male", "Female"))
)
```

```{r race}
df_race <- read_csv(here::here(path_fairema, str_c("outer_preds_perf_", "race", 
                                                   "_", window, "_", lead, "_", 
                                                   version, "_", cv, "_", model,
                                                   ".csv")),
                    col_types = cols()) |> 
  filter(group != "all", n_lapses != 0) |> 
  select(-n_lapses)

rbind(
  contrast_table(df_race, "auroc", c("white", "non_white")),
  contrast_table(df_race, "prauc", c("white", "non_white")),
  contrast_table(df_race, "sensitivity", c("white", "non_white")),
  contrast_table(df_race, "specificity", c("white", "non_white")),
  contrast_table(df_race, "ppv", c("white", "non_white")),
  contrast_table(df_race, "balaccuracy", c("white", "non_white"))
)
```


```{r income}
df_income <- read_csv(here::here(path_fairema, str_c("outer_preds_perf_", 
                                                     "income", "_", window, "_", 
                                                     lead, "_", version, "_", cv, 
                                                     "_", model, ".csv")),
                      col_types = cols()) |> 
  filter(group != "all", n_lapses != 0) |> 
  select(-n_lapses)

rbind(
  contrast_table(df_income, "auroc", c("above_poverty", "below_poverty")),
  contrast_table(df_income, "prauc", c("above_poverty", "below_poverty")),
  contrast_table(df_income, "sensitivity", c("above_poverty", "below_poverty")),
  contrast_table(df_income, "specificity", c("above_poverty", "below_poverty")),
  contrast_table(df_income, "ppv", c("above_poverty", "below_poverty")),
  contrast_table(df_income, "balaccuracy", c("above_poverty", "below_poverty"))
)
```


```{r age}
df_age <- read_csv(here::here(path_fairema, str_c("outer_preds_perf_", "age", "_", window, 
                                           "_", lead, "_", version, "_", cv, "_", model,
                                           ".csv")),
                   col_types = cols()) |> 
  filter(group != "all", n_lapses != 0) |> 
  select(-n_lapses)

rbind(
  contrast_table(df_age, "auroc", c("younger", "older")),
  contrast_table(df_age, "prauc", c("younger", "older")),
  contrast_table(df_age, "sensitivity", c("younger", "older")),
  contrast_table(df_age, "specificity", c("younger", "older")),
  contrast_table(df_age, "ppv", c("younger", "older")),
  contrast_table(df_age, "balaccuracy", c("younger", "older"))
)
```

